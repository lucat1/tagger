pub use sqlx_migrate :: prelude :: * ; # [allow (dead_code)] # [allow (clippy :: all , clippy :: pedantic)] # [doc = "Created at 20220910124957."] pub mod _1_init_migrate { } # [allow (dead_code)] # [allow (clippy :: all , clippy :: pedantic)] # [doc = "Created at 20220910124957."] pub mod _1_init_revert { } # [doc = r" All the migrations."] pub fn migrations () -> impl IntoIterator < Item = Migration < sqlx :: Sqlite >> { [sqlx_migrate :: Migration :: new ("init" , | ctx | std :: boxed :: Box :: pin (async move { use sqlx :: Executor ; let mut ctx : sqlx_migrate :: prelude :: MigrationContext < sqlx :: Sqlite > = ctx ; ctx . tx () . execute (include_str ! ("/home/luca/github/tagger/migrations/20220910124957_init.migrate.sql")) . await ? ; Ok (()) })) . reversible (| ctx | std :: boxed :: Box :: pin (async move { use sqlx :: Executor ; let mut ctx : sqlx_migrate :: prelude :: MigrationContext < sqlx :: Sqlite > = ctx ; ctx . tx () . execute (include_str ! ("/home/luca/github/tagger/migrations/20220910124957_init.revert.sql")) . await ? ; Ok (()) })) ,] }